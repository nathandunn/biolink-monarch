# coding: utf-8

"""
    BioLink API

    API integration layer for linked biological objects.   __Source:__ https://github.com/monarch-initiative/biolink-api/

    OpenAPI spec version: 0.1.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import swagger_client
from swagger_client.rest import ApiException
from swagger_client.apis.bioentity_api import BioentityApi


class TestBioentityApi(unittest.TestCase):
    """ BioentityApi unit test stubs """

    def setUp(self):
        self.api = swagger_client.apis.bioentity_api.BioentityApi()

    def tearDown(self):
        pass

    def test_get_allele_object(self):
        """
        Test case for get_allele_object

        TODO Returns allele object
        """
        pass

    def test_get_anatomy_gene_associations(self):
        """
        Test case for get_anatomy_gene_associations

        TODO Returns associations between anatomical entity and genes
        """
        pass

    def test_get_anatomy_object(self):
        """
        Test case for get_anatomy_object

        TODO Returns anatomical entity
        """
        pass

    def test_get_anatomy_phenotype_associations(self):
        """
        Test case for get_anatomy_phenotype_associations

        TODO Returns associations between anatomical entity and phenotypes
        """
        pass

    def test_get_disease_anatomy_associations(self):
        """
        Test case for get_disease_anatomy_associations

        TODO Returns anatomical locations associated with a disease
        """
        pass

    def test_get_disease_function_associations(self):
        """
        Test case for get_disease_function_associations

        TODO Returns biological functions associated with a disease
        """
        pass

    def test_get_disease_gene_associations(self):
        """
        Test case for get_disease_gene_associations

        Returns genes associated with a disease
        """
        pass

    def test_get_disease_model_associations(self):
        """
        Test case for get_disease_model_associations

        Returns associations to models of the disease
        """
        pass

    def test_get_disease_model_taxon_associations(self):
        """
        Test case for get_disease_model_taxon_associations

        Same as `/disease/<id>/models` but constrain models by taxon
        """
        pass

    def test_get_disease_object(self):
        """
        Test case for get_disease_object

        TODO Returns disease object
        """
        pass

    def test_get_disease_phenotype_associations(self):
        """
        Test case for get_disease_phenotype_associations

        Returns phenotypes associated with disease
        """
        pass

    def test_get_disease_substance_associations(self):
        """
        Test case for get_disease_substance_associations

        Returns substances associated with a disease
        """
        pass

    def test_get_disease_substance_associations_0(self):
        """
        Test case for get_disease_substance_associations_0

        Returns substances associated with a disease
        """
        pass

    def test_get_environment_object(self):
        """
        Test case for get_environment_object

        TODO Returns environment entity
        """
        pass

    def test_get_environment_phenotype_associations(self):
        """
        Test case for get_environment_phenotype_associations

        TODO Returns list of associations
        """
        pass

    def test_get_gene_disease_associations(self):
        """
        Test case for get_gene_disease_associations

        Returns diseases associated with gene
        """
        pass

    def test_get_gene_expression_associations(self):
        """
        Test case for get_gene_expression_associations

        TODO Returns expression events for a gene
        """
        pass

    def test_get_gene_function_associations(self):
        """
        Test case for get_gene_function_associations

        Returns function associations for a gene
        """
        pass

    def test_get_gene_homolog_associations(self):
        """
        Test case for get_gene_homolog_associations

        Returns homologs for a gene
        """
        pass

    def test_get_gene_interactions(self):
        """
        Test case for get_gene_interactions

        Returns interactions for a gene
        """
        pass

    def test_get_gene_object(self):
        """
        Test case for get_gene_object

        Returns gene object
        """
        pass

    def test_get_gene_phenotype_associations(self):
        """
        Test case for get_gene_phenotype_associations

        Returns phenotypes associated with gene
        """
        pass

    def test_get_gene_publication_list(self):
        """
        Test case for get_gene_publication_list

        TODO Returns expression events for a gene
        """
        pass

    def test_get_geneproduct_object(self):
        """
        Test case for get_geneproduct_object

        TODO Returns gene product object
        """
        pass

    def test_get_generic_associations(self):
        """
        Test case for get_generic_associations

        Returns associations for an entity regardless of the type
        """
        pass

    def test_get_generic_object(self):
        """
        Test case for get_generic_object

        TODO Returns object of any type
        """
        pass

    def test_get_genotype_disease_associations(self):
        """
        Test case for get_genotype_disease_associations

        Returns diseases associated with a genotype
        """
        pass

    def test_get_genotype_gene_associations(self):
        """
        Test case for get_genotype_gene_associations

        Returns genes associated with a genotype
        """
        pass

    def test_get_genotype_genotype_associations(self):
        """
        Test case for get_genotype_genotype_associations

        Returns genotypes-genotype associations
        """
        pass

    def test_get_genotype_object(self):
        """
        Test case for get_genotype_object

        Returns genotype object
        """
        pass

    def test_get_genotype_phenotype_associations(self):
        """
        Test case for get_genotype_phenotype_associations

        Returns phenotypes associated with a genotype
        """
        pass

    def test_get_goterm_gene_associations(self):
        """
        Test case for get_goterm_gene_associations

        TODO Returns associated genes
        """
        pass

    def test_get_goterm_object(self):
        """
        Test case for get_goterm_object

        TODO Returns GO class object
        """
        pass

    def test_get_goterm_phenotype_associations(self):
        """
        Test case for get_goterm_phenotype_associations

        TODO Returns associated phenotypes
        """
        pass

    def test_get_literature_disease_associations(self):
        """
        Test case for get_literature_disease_associations

        Returns associations between a lit entity and a disease
        """
        pass

    def test_get_literature_gene_associations(self):
        """
        Test case for get_literature_gene_associations

        Returns associations between a lit entity and a gene
        """
        pass

    def test_get_literature_genotype_associations(self):
        """
        Test case for get_literature_genotype_associations

        Returns associations between a lit entity and a genotype
        """
        pass

    def test_get_parent_object(self):
        """
        Test case for get_parent_object

        TODO Returns individual
        """
        pass

    def test_get_parent_object_0(self):
        """
        Test case for get_parent_object_0

        TODO Returns investigation object
        """
        pass

    def test_get_pathway_gene_associations(self):
        """
        Test case for get_pathway_gene_associations

        TODO Returns list of genes associated with a pathway
        """
        pass

    def test_get_pathway_object(self):
        """
        Test case for get_pathway_object

        TODO Returns pathway object
        """
        pass

    def test_get_pathway_participant_associations(self):
        """
        Test case for get_pathway_participant_associations

        TODO Returns associations to participants (molecules, etc) for a pathway
        """
        pass

    def test_get_phenotype_anatomy_associations(self):
        """
        Test case for get_phenotype_anatomy_associations

        Returns anatomical entities associated with a phenotype
        """
        pass

    def test_get_phenotype_function_associations(self):
        """
        Test case for get_phenotype_function_associations

        TODO Returns biological functions associated with a Phenotype
        """
        pass

    def test_get_phenotype_gene_associations(self):
        """
        Test case for get_phenotype_gene_associations

        Returns gene ids for all genes for a particular phenotype in a taxon
        """
        pass

    def test_get_phenotype_gene_associations_0(self):
        """
        Test case for get_phenotype_gene_associations_0

        TODO Returns associated phenotypes
        """
        pass

    def test_get_phenotype_object(self):
        """
        Test case for get_phenotype_object

        TODO Returns phenotype class object
        """
        pass

    def test_get_phenotype_phenotype_associations(self):
        """
        Test case for get_phenotype_phenotype_associations

        TODO Returns associated phenotypes
        """
        pass

    def test_get_pub_object(self):
        """
        Test case for get_pub_object

        TODO Returns publication object
        """
        pass

    def test_get_sequence_feature_object(self):
        """
        Test case for get_sequence_feature_object

        TODO Returns seqfeature
        """
        pass

    def test_get_substance_exposures(self):
        """
        Test case for get_substance_exposures

        TODO Returns associations between a substance and related exposures
        """
        pass

    def test_get_substance_interactions(self):
        """
        Test case for get_substance_interactions

        TODO Returns associations between given drug and interactions
        """
        pass

    def test_get_substance_object(self):
        """
        Test case for get_substance_object

        TODO Returns substance entity
        """
        pass

    def test_get_substance_participant_in_associations(self):
        """
        Test case for get_substance_participant_in_associations

        Returns associations between an activity and process and the specified substance
        """
        pass

    def test_get_substance_relationships(self):
        """
        Test case for get_substance_relationships

        TODO Returns associations between a substance and other substances
        """
        pass

    def test_get_substance_role_associations(self):
        """
        Test case for get_substance_role_associations

        Returns associations between given drug and roles
        """
        pass

    def test_get_substance_target_associations(self):
        """
        Test case for get_substance_target_associations

        TODO Returns associations between given drug and targets
        """
        pass

    def test_get_variant_gene_associations(self):
        """
        Test case for get_variant_gene_associations

        Returns genes associated with a variant
        """
        pass

    def test_get_variant_genotype_associations(self):
        """
        Test case for get_variant_genotype_associations

        Returns genotypes associated with a variant
        """
        pass

    def test_get_variant_object(self):
        """
        Test case for get_variant_object

        TODO Returns sequence variant entity
        """
        pass

    def test_get_variant_phenotype_associations(self):
        """
        Test case for get_variant_phenotype_associations

        Returns phenotypes associated with a variant
        """
        pass


if __name__ == '__main__':
    unittest.main()
