# coding: utf-8

"""
    BioLink API

    API integration layer for linked biological objects.   __Source:__ https://github.com/monarch-initiative/biolink-api/

    OpenAPI spec version: 0.1.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import swagger_client
from swagger_client.rest import ApiException
from swagger_client.apis.association_api import AssociationApi


class TestAssociationApi(unittest.TestCase):
    """ AssociationApi unit test stubs """

    def setUp(self):
        self.api = swagger_client.apis.association_api.AssociationApi()

    def tearDown(self):
        pass

    def test_get_association_object(self):
        """
        Test case for get_association_object

        Returns the association with a given identifier
        """
        pass

    def test_get_association_search(self):
        """
        Test case for get_association_search

        Generalized search over complete corpus of associations
        """
        pass

    def test_get_association_search_0(self):
        """
        Test case for get_association_search_0

        Returns list of matching associations
        """
        pass

    def test_get_association_search_1(self):
        """
        Test case for get_association_search_1

        Returns list of matching associations
        """
        pass

    def test_get_associations_from(self):
        """
        Test case for get_associations_from

        Returns associations connecting two entities
        """
        pass

    def test_get_associations_from_0(self):
        """
        Test case for get_associations_from_0

        Returns list of matching associations starting from a given subject (source)
        """
        pass

    def test_get_associations_to(self):
        """
        Test case for get_associations_to

        Returns list of matching associations pointing to a given object (target)
        """
        pass


if __name__ == '__main__':
    unittest.main()
